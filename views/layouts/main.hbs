<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css">
</head>

<body onload="onStartLoad()">
    <div class="container-fluid">
        {{{body}}}
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let tbody = document.querySelector('#tbody');
        let idClick = '';
        let isEditClick = false;
        let lastSTT = 0;
        let STTdeleted = 0;
        function onStartLoad() {
            fetch('/getList').then(res => res.json()).then(data => {
                showList(data);
                addEventClickButtons();
            }).then(err => console.log(err));
        }
        function showList(list) {
            lastSTT = 0;
            list.forEach(obj => {
                tbody.innerHTML += getStringRow(obj, lastSTT);
                lastSTT++;
            })

        }
        function getStringRow(obj, stt) {
            row = `
                <tr>
                    <td scope="col" name = "id" colspan="1" style = "display: none;">${obj._id}</td>
                    <td scope="col" name = "stt" colspan="1">${stt}</td>
                    <td scope="col" colspan="2">${obj._name}</td>
                    <td scope="col" colspan="1">${obj._price}</td>
                    <td scope="col" colspan="1">${obj._amount}</td>
                    <td colspan="1">
                        <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                        <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                        <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                    </div>
                </td>
            </tr>`;
            return row;
        }
        function editRow(event) {
            let td = event.target.closest('tr').querySelectorAll('td');
            let inputs = document.querySelector('#form').querySelectorAll('input');
            console.log(td);
            idClick = td[0].textContent;
            inputs[0].value = td[2].textContent;
            inputs[1].value = td[3].textContent;
            inputs[2].value = td[4].textContent;
            modal.show();
        }

        function deleteRow(event) {
            const tr = event.target.closest('tr');
            idClick = tr.querySelector('[name = "id"]').textContent;
            STTdeleted = Number(tr.querySelector('[name = "stt"]').textContent);
            fetch(`delete/${idClick}`, { method: 'delete' }).then(res => res.text()).then(data => {
                tr.remove();
                let listTr = tbody.querySelectorAll('tr');
                for (let i = STTdeleted; i < lastSTT; i++) {
                    listTr[i].querySelector('[name = "stt"]').innerHTML = i;
                }
                lastSTT--;
            });
        }

        function addEventClickButtons() {
            let editButtons = document.querySelectorAll('[name = "edit"]');
            let deleteButtons = document.querySelectorAll('[name = "delete"]');
            deleteButtons.forEach(btn => {
                btn.addEventListener('click', event => {
                    deleteRow(event);
                });
            })
            editButtons.forEach(btn => {
                btn.addEventListener('click', (event) => {
                    isEditClick = true;
                    editRow(event);
                });
            })
            modal = new bootstrap.Modal(document.getElementById('staticBackdrop'), {
                keyboard: false,
                backdrop: 'static'
            });
        }
        function CleanForm() {
            let pro = document.querySelector('#form').querySelectorAll('input');
            for (let i = 0; i < pro.length; i++) {
                pro[i].value = null;
            }
        }
        function saveForm() {
            let pro = document.querySelector('#form').querySelectorAll('input');
            let obj = { "_name": pro[0].value, "_price": parseInt(pro[1].value), '_amount': parseInt(pro[2].value) };
            let url = '/add';
            if (isEditClick) method = `/edit/${idClick}`;
            modal.hide();
            fetch(`${method}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(obj)
            }).then(res => res.json()).then(data => {
                if (method === '/add') {
                    tbody.innerHTML += getStringRow(data, ++lastSTT);
                    return;
                }
                let tr = tbody.querySelectorAll('tr');
                for (let i = 0; i < tr.length; i++) {
                    if (tr[i].querySelector('td').textContent == idClick) {
                        let td = tr[i].querySelectorAll('td');
                        td[2].innerText = data._name;
                        td[3].innerText = data._price;
                        td[4].innerText = data._amount;
                        break;
                    }
                }
            })
        }
    </script>
</body>

</html>