<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css">
</head>

<body onload="onStartLoad()">
    <div class="container-fluid">
        <div class="row p-0" style="display: flex; flex-direction: row;">
            <nav class="navbar bg-dark">
                <form class="container-fluid" onsubmit="event.preventDefault()">
                    <div class="input-group">
                        <input type="text" class="form-control" id="inputSearch" placeholder="Name"
                            aria-label="Username" aria-describedby="basic-addon1">
                        <button class="btn btn-outline-light col-2" type="submit"
                            style="border-top-right-radius: 5px; border-bottom-right-radius: 5px;">Search</button>
                        <button type="button" class="btn btn-outline-success col-2 ms-2" style="border-radius: 5px;"
                            onclick="CreateProduct()">
                            New Product
                        </button>
                    </div>
                </form>
            </nav>
        </div>
        {{{body}}}
    </div>
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Sản Phẩm</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form onsubmit="event.preventDefault()" id='form'>
                        <div class="mb-3" name='property'>
                            <label for="InputName" class="form-label">Tên</label>
                            <input type="text" required class="form-control" id="InputName" placeholder="Name Product"
                                aria-describedby="emailHelp">
                        </div>
                        <div class="mb-3" name='property'>
                            <label for="InputPrice" class="form-label">Giá</label>
                            <input type="number" required class="form-control" placeholder="Price" min="0"
                                id="InputPrice">
                        </div>
                        <div class="mb-3" name='property'>
                            <label for="InputAmount" class="form-label">Số lượng</label>
                            <input type="number" required class="form-control" placeholder="Amount" id="InputAmount">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveModal" onclick="saveForm()">Save</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalDelete" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="modalContent" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="modalContent"></h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="OnDelete()">Save</button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let tbody = document.querySelector('#tbody');
        let idClick = '';
        let isEditClick = false;
        let isDeleteClick = false;
        let lastSTT = 0;
        let STTdeleted = 0;
        let modal = new bootstrap.Modal(document.getElementById('staticBackdrop'), {
            keyboard: false,
            backdrop: 'static'
        });
        let modalDelete = new bootstrap.Modal(document.getElementById('modalDelete'), {
            keyboard: false,
            backdrop: 'static'
        });
        let trDelete;
        function onStartLoad() {
            fetch('/getList').then(res => res.json()).then(data => {
                showList(data);
                addEventClickButtons();
            }).then(err => console.log(err));
        }

        function showList(list) {
            lastSTT = 0;
            list.forEach(obj => {
                tbody.innerHTML += getStringRow(obj, lastSTT);
                lastSTT++;
            })

        }

        function getStringRow(obj1, stt1) {
            console.log(obj1);
            row = `
                <tr>
                    <td scope="col" name = "id" colspan="1" style = "display: none;">${obj1._id}</td>
                    <td scope="col" name = "stt" colspan="1">${stt1}</td>
                    <td scope="col" name = "nameRow" colspan="2">${obj1._name}</td>
                    <td scope="col" colspan="1">${obj1._price}</td>
                    <td scope="col" colspan="1">${obj1._amount}</td>
                    <td colspan="1">
                        <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                        <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                        <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                    </div>
                </td>
            </tr>`;
            console.log(row);
            return row;
        }

        function editRow(event) {
            isEditClick = true;
            let td = event.target.closest('tr').querySelectorAll('td');
            let inputs = document.querySelector('#form').querySelectorAll('input');
            idClick = td[0].textContent;
            console.log(td + "\n" + idClick);
            inputs[0].value = td[2].textContent;
            inputs[1].value = td[3].textContent;
            inputs[2].value = td[4].textContent;
            modal.show();
        }

        function deleteRow(event) {
            trDelete = event.target.closest('tr');
            idClick = trDelete.querySelector('[name = "id"]').textContent;
            let name = trDelete.querySelector('[name = "nameRow"]').textContent;
            document.querySelector('#modalContent').innerHTML = "Xác nhận xoá [" + name + "]";
            modalDelete.show();
            STTdeleted = Number(trDelete.querySelector('[name = "stt"]').textContent);
            isDeleteClick = true;
        }

        function OnDelete() {
            modalDelete.hide();
            if (!isDeleteClick) return;
            fetch(`delete/${idClick}`, { method: 'delete' }).then(res => res.text()).then(data => {
                let listTr = tbody.querySelectorAll('tr');
                listTr[STTdeleted].remove();
                for (let i = STTdeleted + 1; i < listTr.length; i++) {
                    listTr[i].querySelector('[name = "stt"]').innerHTML = String(i - 1);
                }
            });
            isDeleteClick = false;
        }

        function addEventClickButtons() {
            let editButtons = document.querySelectorAll('[name = "edit"]');
            let deleteButtons = document.querySelectorAll('[name = "delete"]');
            deleteButtons.forEach(btn => {
                btn.addEventListener('click', event => {
                    deleteRow(event);
                });
            })
            editButtons.forEach(btn => {
                btn.addEventListener('click', (event) => {
                    editRow(event);
                });
            })

        }
        function CleanModal() {
            let pro = document.querySelector('#form').querySelectorAll('input');
            for (let i = 0; i < pro.length; i++) {
                pro[i].value = "";
            }
        }
        function saveForm() {
            isDeleteClick = false;
            let pro = document.querySelector('#form').querySelectorAll('input');
            let _name = pro[0].value;
            let _price = parseInt(pro[1].value);
            let _amount = parseInt(pro[2].value);
            if (_name.length == 0 || !_price || !_amount) {
                document.querySelector('#modalContent').innerHTML = "Dữ liệu trống ?";
                modalDelete.show();
                return;
            }
            if (!/^[a-zA-Z ]+$/.test(_name)) {
                document.querySelector('#modalContent').innerHTML = "Tên sản phẩm sai định dạng !";
                modalDelete.show();
                return;
            }
            let obj = { "_name": pro[0].value, "_price": parseInt(pro[1].value), '_amount': parseInt(pro[2].value) };
            let url = '/add';
            if (isEditClick) url = `/edit/${idClick}`;
            modal.hide();
            fetch(`${url}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(obj)
            }).then(res => res.json()).then(data => {
                if (url === '/add') {
                    lastSTT = tbody.querySelectorAll('tr').length;
                    row = `
                <tr>
                    <td scope="col" name = "id" colspan="1" style = "display: none;">${data._id}</td>
                    <td scope="col" name = "stt" colspan="1">${lastSTT}</td>
                    <td scope="col" colspan="2">${obj._name}</td>
                    <td scope="col" colspan="1">${obj._price}</td>
                    <td scope="col" colspan="1">${obj._amount}</td>
                    <td colspan="1">
                        <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                        <button type="button" name = "edit" class="btn btn-outline-dark">Edit</button>
                        <button type="button" name = "delete" class="btn btn-outline-danger">Delete</button>
                    </div>
                </td>
            </tr>`;
                    tbody.innerHTML += row;
                    addEventClickButtons();
                    return;
                }
                let tr = tbody.querySelectorAll('tr');
                for (let i = 0; i < tr.length; i++) {
                    if (tr[i].querySelector('td').textContent == idClick) {
                        let td = tr[i].querySelectorAll('td');
                        td[2].innerText = data._name;
                        td[3].innerText = data._price;
                        td[4].innerText = data._amount;
                        break;
                    }
                }
            })
        }
        function CreateProduct() {
            CleanModal();
            modal.show();
            isEditClick = false;
        }
    </script>
</body>

</html>